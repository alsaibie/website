---
export interface SkillCategory {
  name: string;
  skills: string[];
  color: string;
}

export interface Props {
  skillCategories: SkillCategory[];
  language?: string;
}

const { skillCategories, language = "en" } = Astro.props;
---

<section class="animate space-y-4">
  <h2 class="text-2xl font-bold text-black dark:text-white border-b border-black/10 dark:border-white/20 pb-2">
    Skills
  </h2>
  
  <div class="space-y-6">
    {skillCategories.map((category) => {
      const colorClasses = {
        blue: {
          border: 'border-blue-500',
          bg: 'bg-blue-50 dark:bg-blue-950/20',
          borderBox: 'border-blue-200 dark:border-blue-800',
          hoverBg: 'hover:bg-blue-100 dark:hover:bg-blue-900/20',
          hoverBorder: 'hover:border-blue-300 dark:hover:border-blue-700'
        },
        purple: {
          border: 'border-purple-500',
          bg: 'bg-purple-50 dark:bg-purple-950/20',
          borderBox: 'border-purple-200 dark:border-purple-800',
          hoverBg: 'hover:bg-purple-100 dark:hover:bg-purple-900/20',
          hoverBorder: 'hover:border-purple-300 dark:hover:border-purple-700'
        },
        orange: {
          border: 'border-orange-500',
          bg: 'bg-orange-50 dark:bg-orange-950/20',
          borderBox: 'border-orange-200 dark:border-orange-800',
          hoverBg: 'hover:bg-orange-100 dark:hover:bg-orange-900/20',
          hoverBorder: 'hover:border-orange-300 dark:hover:border-orange-700'
        },
        green: {
          border: 'border-green-500',
          bg: 'bg-green-50 dark:bg-green-950/20',
          borderBox: 'border-green-200 dark:border-green-800',
          hoverBg: 'hover:bg-green-100 dark:hover:bg-green-900/20',
          hoverBorder: 'hover:border-green-300 dark:hover:border-green-700'
        }
      } as const;
      const colors = colorClasses[category.color as keyof typeof colorClasses] || colorClasses.blue;
      
      return (
        <div class={language === 'ar' ? `border-r-4 ${colors.border} pr-4` : `border-l-4 ${colors.border} pl-4`}>
          <h3 class="text-base font-medium mb-3 text-black/80 dark:text-white/80">{category.name}</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
            {category.skills.map((skill) => {
              const [subgroup, tools] = skill.includes(':') ? skill.split(':') : [skill, ''];
              return (
                <div class="group">
                  <div class={`${colors.bg} border ${colors.borderBox} rounded px-4 py-3 text-sm transition-all duration-200 ${colors.hoverBg} ${colors.hoverBorder} leading-relaxed text-center`}>
                    <div class="font-semibold text-black/90 dark:text-white/90 mb-1">
                      {subgroup.trim()}
                    </div>
                    {tools && (
                      <div class="text-black/70 dark:text-white/70 text-xs">
                        {tools.trim()}
                      </div>
                    )}
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      );
    })}
  </div>
</section>
